apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "third-places.fullname" . }}
  labels:
    {{- include "third-places.labels" . | nindent 4 }}
    app.kubernetes.io/component: application
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "third-places.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: application
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "third-places.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: application
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ 'python3', 'manage.py' ]
          args: [ 'runserver', '80' ]
          env:
            - name: PGHOST
              value: {{ include "third-places.fullname" . }}-postgresql
            - name: PGPORT
              value: "5432"
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: POSTGRES_DB
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: POSTGRES_PASSWORD
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/
              port: http
          readinessProbe:
            httpGet:
              path: /api/
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
